// <auto-generated />
using System;
using ConsoleAppBook2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleAppBook2.Migrations
{
    [DbContext(typeof(BookContext))]
    partial class BookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorsAuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BooksISBN")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuthorsAuthorId", "BooksISBN");

                    b.HasIndex("BooksISBN");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("ConsoleAppBook2.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("ConsoleAppBook2.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ISBN");

                    b.HasIndex("PublisherId");

                    b.HasIndex("Title");

                    b.ToTable("BookInfo", (string)null);
                });

            modelBuilder.Entity("ConsoleAppBook2.PriceOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("NewPrice")
                        .HasColumnType("float");

                    b.Property<string>("PromoText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN")
                        .IsUnique();

                    b.ToTable("PriceOffer");
                });

            modelBuilder.Entity("ConsoleAppBook2.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PublisherName");

                    b.HasKey("Id");

                    b.ToTable("PublisherInfo");
                });

            modelBuilder.Entity("ConsoleAppBook2.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("BookISBN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ReviewId");

                    b.HasIndex("BookISBN");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("ConsoleAppBook2.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsAuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleAppBook2.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleAppBook2.Book", b =>
                {
                    b.HasOne("ConsoleAppBook2.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("ConsoleAppBook2.PriceOffer", b =>
                {
                    b.HasOne("ConsoleAppBook2.Book", "Book")
                        .WithOne("PriceOffer")
                        .HasForeignKey("ConsoleAppBook2.PriceOffer", "BookISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ConsoleAppBook2.Review", b =>
                {
                    b.HasOne("ConsoleAppBook2.Book", null)
                        .WithMany("Reviews")
                        .HasForeignKey("BookISBN");
                });

            modelBuilder.Entity("ConsoleAppBook2.Book", b =>
                {
                    b.Navigation("PriceOffer")
                        .IsRequired();

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
